@startuml game

package pygame{}

package assets.scripts {
    abstract GameObject{
        + position
        + size
        + position_in_matrix
        + rect
        + texture
    }
    abstract MapElement{}

    class LightSource{}

    class Platform{}
    class Lamp{}


    class Player{
        + Health
    }
    class Ennemy{}

}

class Camera {
    + link
    + rect
    + update()
    + transform_coord(position)
}

class Game {
    + world
    + loop()
    - __process_events()
    - __update()
    - __draw()
}

class GUI {
    {static} + components
    {static} + add_component(GUIComponent)
    {static} + draw(Surface)
}

class HealthBar{
    + texture
    + link
}

abstract GUIComponent{
    + position
    + size
    + surface()
}

class ButtonScript{
    + fct
    + args
    + set_quit(game)
}

class Button{
    + id
    + label
    + hitbox
    + state
    + font
    + label_color

    + draw()
    + run()
}

class ButtonManager{
    {static} + update()
    {static} + is_alive(id)
    {static} + set_alive(id)
    {static} + kill(id)
    {static} + unregister_buttons(id)
    {static} + register_buttons(Button)
}

class World{
    + enemies
    + player
    + background
    + blocks
    + deserialize(file)
    + update()
    + update_pos(obj)
    + draw()
}

class Menu {
    {static} + is_open(id)
    {static} + close_menu(id)
    {static} + open_menu(id)
    {static} + is_open(id)
}

class Text {
    {static} + fonts
    {static} + divide_string(text)
    {static} + display_message(text, position, font, color, divide)
}

class Input{
    {static} + is_pressed(key)
    {static} + is_pressed_once(key)
    {static} + is_clicked(button)
    {static} + is_clicked_once(button)
    {static} + get_motion()
    {static} + get_mouse()
    {static} + update()
}

class EventManager{
    {static} + listeners
    {static} + event_queue

    {static} + initialize(custom_events)
    {static} + flush()
    {static} + register_listener(listener)
    {static} + push_event(custom_events)
}

class GameState {
    {static} + DEFAULT_FONT
    {static} + WINDOW 
    {static} + GAME_SURFACE
    {static} + PhysicDT
    {static} + GraphicDT
    {static} + save
    {static} + camera

    {static} + initialize()   
    {static} - __initialize_game_configuration(GameConfig,attributes)
}

class GameConfig {
    {static} + BLOCK_SIZE
    {static} + Gravity 
    {static} + NB_BLOCK_HEIGHT
    {static} + BLOCKS_HEIGHT
    {static} + ambient_color_world
    {static} + PhysicTick

    {static} + FONT_SIZE
    {static} + FONT_DIR
    {static} + FONT_DATA

    {static} + COLORS

    {static} + KeyBindings.up
    {static} + KeyBindings.left
    {static} + KeyBindings.right
    
    {static} + Graphics.EnableLights
    {static} + Graphics.WindowAutoSize
    {static} + Graphics.WindowHeight
    {static} + Graphics.WindowWidth
    {static} + Graphics.MaxFPS
    {static} + Graphics.Fullscreen

    {static} + Graphics.WindowSize
    {static} + Graphics.WindowRatio
}

Ennemy        --|> LightSource
Ennemy        --|> GameObject

Player        --|> LightSource
Player        --|> GameObject

MapElement    --|> GameObject
Platform      --|> MapElement
Lamp          --|> MapElement
Lamp          --|> LightSource

Game          ---> pygame

Button        ---> ButtonScript
Button        ---> Text

ButtonManager <--> Button
ButtonManager ---> Input

GUIComponent     <|-- HealthBar

GUI ---> GUIComponent

Game          ---> Menu
Game          ---> Input
Game          ---> World
Game          ---> EventManager
Game          ---> ButtonManager
Game          ---> GUI

Menu --> ButtonManager
Menu ---> Text

World         ---> Camera
World         ---> MapElement
World         ---> Player
World         ---> Ennemy

@enduml